type Query {
  listTodos(input: ListTodosInput!): ListTodosOutput!
  listBoards(input: ListBoardsInput!): ListBoardsOutput!
}

type Mutation {
  createTodo(input: CreateTodoInput!): CreateTodoOutput!
  updateTodo(input: UpdateTodoInput!): UpdateTodoOutput!

  createBoard(input: CreateBoardInput!): CreateBoardOutput!
  updateBoard(input: UpdateBoardInput!): UpdateBoardOutput!

  addTodoToBoard(input: AddTodoToBoardInput!): AddTodoToBoardOutput!
}

## -- input and output types --

input ListTodosInput {
  _: Boolean
}
type ListTodosOutput {
  todos: [Todo!]!
}

input ListBoardsInput {
  _: Boolean
}
type ListBoardsOutput {
  boards: [Board!]!
}

input CreateTodoInput {
  text: String!
}
type CreateTodoOutput {
  todo: Todo!
}

#properties are optional to allow for partial updates
input UpdateTodoInput {
  id: ID!
  text: String
  completed: Boolean
}
type UpdateTodoOutput {
  todo: Todo!
}

input CreateBoardInput {
  name: String!
}
type CreateBoardOutput {
  board: Board!
}

input UpdateBoardInput {
  id: ID!
  name: String
}
type UpdateBoardOutput {
  board: Board!
}

input AddTodoToBoardInput {
  todoId: ID!
  boardId: ID!
}
type AddTodoToBoardOutput {
  _: Boolean
}

## -- actual types --

type Todo {
  id: ID!
  owner: User!
  text: String!
  completed: Boolean
  board: Board
}

type Board {
  id: ID!
  owner: User!
  name: String!
  todos: [Todo!]!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
}
